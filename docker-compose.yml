version: '3'

services: 
  elasticsearch:
    build:
      context: elasticsearch/
      args:
        ELK_VERSION: $ELK_VERSION
    volumes:
      - ./elasticsearch/config/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml:ro,z
      - elasticsearch:/usr/share/elasticsearch/data:z
    ports:
      - "9200:9200"
      - "9300:9300"
    environment:
      ES_JAVA_OPTS: "-Xmx256m -Xms256m"
      ELASTIC_PASSWORD: chamomile123
      discovery.type: single-node
    networks:
      - elk

  logstash:
    build:
      context: logstash/
      args:
        ELK_VERSION: $ELK_VERSION
    volumes:
      - ./logstash/config/logstash.yml:/usr/share/logstash/config/logstash.yml:ro,z
      - ./logstash/pipeline:/usr/share/logstash/pipeline:ro,z
    ports:
      - "5044:5044"
      - "5000:5000/tcp"
      - "5000:5000/udp"
      - "9600:9600"
    environment:
      LS_JAVA_OPTS: "-Xmx256m -Xms256m"
    networks:
      - elk
    depends_on:
      - elasticsearch

  kibana:
    build:
      context: kibana/
      args:
        ELK_VERSION: $ELK_VERSION
    volumes:
      - ./kibana/config/kibana.yml:/usr/share/kibana/config/kibana.yml:ro,z
    ports:
      - "5601:5601"
    networks:
      - elk
    depends_on:
      - elasticsearch

  mongodb: 
    image: mongo
    container_name: mongodb
    restart: unless-stopped
    # command: mongod --auth
    # command: mongoimport --db Book_data_DB --collection Book_data --type csv --headerline --file DB_txt.csv
    volumes:
      - mongodb:/data/db
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro # 경로문제 점검해봐야 함 
    env_file:
      - ./settings/prod/.env.db
    ports: 
      - 27000:27017

  api:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    command: gunicorn --bind 0.0.0.0:5001 app:app 
    ports: 
      - 5001:5001
    volumes:
      - ./backend/:/app
    depends_on:
      - mongodb


  frontend:
    build: 
      context: ./frontend
      dockerfile: Dockerfile 
    ports: 
      - 3000:3000
    volumes:
      - ./frontend/:/app
      - ./frontend/node_modules/:/app/node_modules
      - build_file:/app/build # build폴더 생성
    tty: true 

  nginx:
    # image: nginx:latest
    build:
      context: ./nginx
    container_name: nginx_service

    ports:
     - "80:8080"
     
    volumes: #front부분 build 부분 맵핑을 시켜줘야함 
     - build_file:/app/build

    depends_on:
     - api
     - frontend

networks:
  elk:
    driver: bridge
    
volumes:
  mongodb:
  build_file:
  elasticsearch:

  # mongodb 접속에 대해서 물어보기


  # docker-compose exec mongodb bash 
 # mongo -u root -p chamomile123 

  # front 주소값 제대로 다시 주기 


  # nginx volumes 부분에 front container 주소 맵핑을 시켜줘야함 

  # docker volume inspect <volume-name> : 특정 volume 상세조회 


  # local에 있는 DB가 아닌 현재 지금 container에 새로 올라가있는데 이부분 질문

  # 포트번호 :을 기준으로 왼쪽이 오른쪽으로 변경되는 구조 