version: '3'

services:

  mongodb: 
    image: mongo
    container_name: mongo-dev
    restart: unless-stopped
    command: mongod --auth
    volumes:
      - mongo:./data:/data/db
    env_file:
      - ./settings/prod/.env.db
    networks:
      - mongo-compose-networks 
    ports: 
      - 27017:27017

    mongo-express: 
      container_name: mongo-express 
      image: mongo-express 
      depends_on:
        - db 
      networks:
        - mongo-compose-networks 
      environment: 
        - ME_CONFIG_MONGODB_SERVER=mongo_dev
        - ME_CONFIG_MONGODB_ADMINUSERNAME=root 
        - ME_CONFIG_BASICAUTH_USERNAME=root
        - ME_CONFIG_BASICAUTH_PASSWORD=chamomile123
      ports:
        - '8081:8081'
  


  api:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    command: gunicorn --bind 0.0.0.0:5001 app:app 
    ports: 
      - 5001:5001
    environment:
      MONGODB_HOST: mongodb
      MONGODB_USERNAME: root 
      MONGODB_PASSWORD: chamomile123
    volumes:
      - ./backend/:/app
    depends_on:
      - mongodb


  frontend:
    build: 
      context: ./frontend
      dockerfile: Dockerfile 
    ports: 
      - 3000:3000
    volumes:
      - ./frontend/:/app
      - ./frontend/node_modules/:/app/node_modules
      - build_file:/app/build # build폴더 생성
    tty: true 

  nginx:
    # image: nginx:latest
    build:
      context: ./nginx
    container_name: nginx_service

    ports:
     - "80:8080"
    
    volumes: #front부분 build 부분 맵핑을 시켜줘야함 
     - build_file:/app/build

    depends_on:
     - backend
     - frontend

volumes:
  mongodb:
  build_file:
  mongo:

networks:
  mongo-compose-networks:
    driver: bridge


  # mongodb 접속에 대해서 물어보기


  # docker-compose exec mongodb bash 
 # mongo -u root -p chamomile123 

  # front 주소값 제대로 다시 주기 


  # nginx volumes 부분에 front container 주소 맵핑을 시켜줘야함 

  # docker volume inspect <volume-name> : 특정 volume 상세조회 


  # local에 있는 DB가 아닌 현재 지금 container에 새로 올라가있는데 이부분 질문