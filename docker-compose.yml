version: '3'

services:

  mongodb: 
    image: mongo:latest
    container_name: mongo 
    restart: unless-stopped
    command: mongod --auth 
    volumes:
      - mongodb:/data/db 

    environment:
      MONGO_INITDB_DATABASE: Book_data_DB
      MONGODB_DATA_DIR: mongodb:/data/db
      MONGO_INITDB_ROOT_USERNAME: root 
      MONGO_INITDB_ROOT_PASSWORD: chamomile123


    ports: 
      - 27017:27017


  api:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    command: gunicorn --bind 0.0.0.0:5001 app:app 
    ports: 
      - 5001:5001
    environment:
      MONGODB_HOST: mongodb
      MONGODB_USERNAME: root 
      MONGODB_PASSWORD: chamomile123
    volumes:
      - ./backend/:/app
    depends_on:
      - mongodb


  frontend:
    build: 
      context: ./frontend
      dockerfile: Dockerfile 
    ports: 
      - 3000:3000
    volumes:
      - ./frontend/:/app
      - ./frontend/node_modules/:/app/node_modules
      - build_file:/app/build # build폴더 생성
    tty: true 

  nginx:
    # image: nginx:latest
    build:
      context: ./nginx
    container_name: nginx_service

    ports:
     - "80:8080"
    
    volumes: #front부분 build 부분 맵핑을 시켜줘야함 
     - build_file:/app/build

    depends_on:
     - backend
     - frontend

volumes:
  mongodb:
  build_file:


  # mongodb 접속에 대해서 물어보기


  # docker-compose exec mongodb bash 


  # front 주소값 제대로 다시 주기 


  # nginx volumes 부분에 front container 주소 맵핑을 시켜줘야함 

  # docker volume inspect <volume-name> : 특정 volume 상세조회 